<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Yange Zheng</title>
    <link>https://yzheng.me/</link>
    <description>Recent content on Yange Zheng</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 01 Dec 2019 02:46:36 +0100</lastBuildDate>
    
	<atom:link href="https://yzheng.me/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Betriebswirtschaftslehre - Produktionswirtschaft</title>
      <link>https://yzheng.me/blogs/bwl_pm-produktionswirtschaft/</link>
      <pubDate>Sun, 01 Dec 2019 02:46:36 +0100</pubDate>
      
      <guid>https://yzheng.me/blogs/bwl_pm-produktionswirtschaft/</guid>
      <description>I. Industrielle Produktion - Motivation &amp;ldquo;Unter Produktion sei die Kombination von Gütern (Input, Produktionsfaktoren) zur Erstellung anderer Güter (Output, betriebliche Leistungen) verstanden.&amp;rdquo;
制造是两种货物间 $f(x)=y$ 的关系。
Entscheidungsprobleme in der Produktion
 Welche Produkte sollen gefertigt werden? Welche Technologie(n) soll(en) dafür verwendet werden? Welche Produktionsfaktoren werden dafür benötigt?  II. Grundbegriffe und Grundzusammenhänge Funktionale BWL:
 Beschaffungswirtschaft &amp;amp; Logistik Produktionswirtschaft Absatzwirtschaft &amp;amp; Marketing Rechnungswesen &amp;amp; Controlling $\cdots$  Institutionelle BWL:
 Bankbetriebslehre BWL öffentlicher Unternehmen Handelsbetriebslehre Industriebetriebslehre $\cdots$  Unternehmenskreislauf Produktion Wichtige Teilgebiete:</description>
    </item>
    
    <item>
      <title>Betriebswirtschaftslehre - Marketing</title>
      <link>https://yzheng.me/blogs/bwl_pm-marketing/</link>
      <pubDate>Sun, 24 Nov 2019 23:36:07 +0100</pubDate>
      
      <guid>https://yzheng.me/blogs/bwl_pm-marketing/</guid>
      <description>I. Allgemeine Grundlagen Die vier P des Marketingmix Allgemein  Produkt Preis Vertrieb(&amp;ldquo;Place&amp;rdquo;) Kommunikation(&amp;ldquo;Promotion&amp;rdquo;)  Dazu bei Dienstleistungen  Physische Umgebung: Dadurch, dass Dienstleistungen an sich nicht sichtbar sind, kommt der Dienstleistungsumgebung wie dem Design und der Ausstattung von Gebäuden und Verpackungen oder dem Erscheinungsbild der Mitarbeiter (zum Beispiel mit einheitlichem Dress Code) besondere Bedeutung zu.
 Prozess: Im Unterschied zur Produktproduktion, sind die Kunden bei der Erstellung der Dienstleistung in den meisten Fällen anwesend, wodurch der Dienstleistungsprozess kundenorientiert, unkompliziert und klar verständlich sein sollte, da sich dieser direkt auf die Qualituatsbeurteilung auswirken kann.</description>
    </item>
    
    <item>
      <title>Normalformen von linearen Isometrien</title>
      <link>https://yzheng.me/blogs/normalformen-von-linearen-isometrien/</link>
      <pubDate>Sun, 24 Nov 2019 01:30:27 +0100</pubDate>
      
      <guid>https://yzheng.me/blogs/normalformen-von-linearen-isometrien/</guid>
      <description>本章的目的是对所给出的 lineare Isometrie 找出一组Basis，这样我们能有一个相对容易的针对这组Basis 的Abbildungsmatrix。
Theorie Satz (ohne Beweis) Diagonalisierbarkeit Sei $V$ ein endlich-dimensionaler unitärer Vektorraum und $\Phi:V\to V$ eine lineare Isometrie. Dann ist $\Phi$ diagonalisierbar. Genauer: Es existiert eine Orthonormalbasis von $V$, die aus Eigenvektoren von $\Phi$ besteht.
Die Diagonalmatrix heißt die (unitäre) Normalform der linearen Isometrie $\Phi$. Sie ist bis auf die Reihenfolge der Eigenwerte $\lambda_k$ durch $\Phi$ eindeutig festgelegt. Damit ist auch eine Klassifikation der linearen Isometrien eines unitären Vektorraumes gegeben: Zur selben Klasse gehören alle linearen Isometrien mit derselben Normalform (einschließlich permutierter Diagonalelemente).</description>
    </item>
    
    <item>
      <title>Linear Isometrien</title>
      <link>https://yzheng.me/blogs/linear-isometrien/</link>
      <pubDate>Wed, 13 Nov 2019 20:18:16 +0100</pubDate>
      
      <guid>https://yzheng.me/blogs/linear-isometrien/</guid>
      <description>Theorie Definition  Es seien $(X,d_X)$ und $(Y,d_Y)$ zwei metrische Räume. Eine Abbildung $f:=X\to Y$ heißt Isometrie, falls $f$ Abstände erhält, falls also für alle $p,q\in X$ gilt $$ d_Y(f(p),f(q))=d_X(p,q) $$   Es seien $V,W$ entweder zwei euklidische oder zwei unitäre Vektoräume. Eine lineare Abbildung $\Phi:V\to W$ heißt lineare Isometrie, wenn für alle $x\in V$ gilt $$ \parallel\Phi(x)\parallel_W=\parallel x\parallel_V $$ d.h. wenn $\Phi$ die Länge jedes Vektors $x\in V$ invariant läßt.</description>
    </item>
    
    <item>
      <title>Selbstadjungierte Endomorphismen</title>
      <link>https://yzheng.me/blogs/selbstadjungierte-endomorphismen/</link>
      <pubDate>Wed, 13 Nov 2019 19:14:58 +0100</pubDate>
      
      <guid>https://yzheng.me/blogs/selbstadjungierte-endomorphismen/</guid>
      <description>Theorie Definition Ein Endomorphismus $\Phi:V\to V$ eines endlich-dimensionalen Vektorraumes $V$ mit Skalarprodukt heißt selbstadjungiert, wenn $\Phi^\ast=\Phi$ ist, d.h. wenn für alle $x,y\in V$ gilt $$ \langle\Phi(x),y\rangle=\langle x,\Phi(y)\rangle $$
Satz (ohne Beweis) Matrix eines s.a. Endomorphismus  Ein Endomorphismus $\Phi$ ist genau dann selbstadjungiert, wenn die Abbildungsmtraix $A$ von $\Phi$ bezüglich einer Orthonormalbasis im euklidischen Fall symmetrisch $(A^\top=A)$ und im unitären Fall hermitesch $(\overline{A}^\top=A)$ ist.   Es sei $V$ ein $n$-dimensionaler (reeller oder komplexer) Vektorraum mit Skalarprodukt und $\Phi:V\to V$ ein selbstadjungierter Endomorphismus.</description>
    </item>
    
    <item>
      <title>Adjungierte Abbildungen</title>
      <link>https://yzheng.me/blogs/adjungierte-abbildungen/</link>
      <pubDate>Wed, 13 Nov 2019 16:45:11 +0100</pubDate>
      
      <guid>https://yzheng.me/blogs/adjungierte-abbildungen/</guid>
      <description>Theorie Definition Es seien $(V,\langle,\rangle_V)$ und $(W,\langle,\rangle_W)$ zwei Vektorräume mit Skalarprodukt und $\Phi: V \to W$ eine lineare Abbildung. Eine lineare Abbildung $\Phi^\ast:W\to V$ heißt zu $\Phi$ adjungierte lineare Abbildung, falls für alle $x\in V$ und alle $y\in W$ gilt: $$ \langle\Phi(x),y\rangle_W=\langle x,\Phi^\ast(y)\rangle_V $$
NOTATION Für eine Matrix $A=(a_{ij})\in \Bbb{C}^{m\times n}$ definieren wir $$ A^\ast=(a^\ast_{ij}):=\overline{A}^\top=(\overline{a}_{ji})\in \Bbb{C}^{n\times m} $$
Satz (ohne Beweis) Existenz und Matrixform vom $\ \Phi^\ast$ Es seien $V,W$ zwei euklidische bzw.</description>
    </item>
    
    <item>
      <title>Orthogonal und unitäre Matrizen</title>
      <link>https://yzheng.me/blogs/orthogonal-und-unitaere-matrizen/</link>
      <pubDate>Tue, 12 Nov 2019 22:07:03 +0100</pubDate>
      
      <guid>https://yzheng.me/blogs/orthogonal-und-unitaere-matrizen/</guid>
      <description>Gegeben sei ein Vektorraum $V$ mit Skalarprodukt, eine Orthonormalbasis $B=\{e_1,\ldots,e_n\}$ von $V$ und eine Matrix $A=(a_{ij})\in GL(n,\Bbb{C})$. Wir definieren eine lineare Abbildung $\Phi_A:V\to V$ durch $$ \Phi_A(e_j):=\sum^n_{k=1}a_{kj}e_k,\ \ \ \ 1\le j\le n $$ Dann ist $\{e^\prime_j := \Phi_A(e_j)\ |\ 1\le j\le n\}$ auch eine basis von $V$.
Frage: Wann ist $B^\prime = \{e_1^\prime,\ldots,e_n^\prime\}$ auch wieder eine ONB?
Dazu rechnen wir $$ \langle e_j^\prime,e_k^\prime\rangle=\langle\sum^n_{r=1}a_{rj}e_r\ ,\ sum^n_{s=1}a_{sk}e_s\rangle=\sum^n_{r,s=1}a_{rj}\overline{a}_{sk}\delta_{rs}=\sum^n_{r=1}a_{rj}\overline{a}_{rk} $$
Also ist $B^\prime$ genau dann auch eine Orthonormalbasis, wenn gilt: $$ \begin{aligned} \sum^n_{r=1}a_{rj}a_{rk}=\delta_{jk}\ ,\ \ j,k=1,\ldots,n \ \ \ \Leftrightarrow\ \ \ A^\top A = E_n &amp;amp; \ \ \ \ \text{Für einen euklidischen Vektorraum } V \newline \sum^n_{r=1}a_{rj}\overline{a}_{rk}=\delta_{jk}\ ,\ \ j,k=1,\ldots,n \ \ \ \Leftrightarrow\ \ \ A^\top \overline{A} = E_n &amp;amp; \ \ \ \ \text{Für einen unitären Vektorraum } V \end{aligned} $$</description>
    </item>
    
    <item>
      <title>Orthogonal Komplemente und Orthogonal-Projektionen</title>
      <link>https://yzheng.me/blogs/orthogonal-komplemente-und-orthogonal-komplemente/</link>
      <pubDate>Tue, 12 Nov 2019 17:42:21 +0100</pubDate>
      
      <guid>https://yzheng.me/blogs/orthogonal-komplemente-und-orthogonal-komplemente/</guid>
      <description>Ist $V$ ein Vektorraum und $U \subset V$ ein Untervektorraum, so hat $U$ im Allgemeinen viele Komplementärräume. Ist hingegen $(V, \langle,\rangle)$ ein euklidischer oder unitärer Vektorraum, so gibt es ein “kanonisches” Komplement.
Theorie Definition  Die Menge $$ U^\bot := \{x\in V\ |\ \langle x,u\rangle = 0\ \ \ \forall u\in U\} $$ heißt Orthogonal-Komplement von $U$ in $V$.   Ist $M\subset V$ eine Teilmenge von Vektoren in $V$, so heißt $$ M^\bot := \{x\in V\ |\ x\bot M\} = \{x\in V\ |\ \langle x,y\rangle=0\ \ \ \ \forall y\in M\} $$ das orthogonale Komplement von $M$ in $V$.</description>
    </item>
    
    <item>
      <title>Orthogonalität</title>
      <link>https://yzheng.me/blogs/orthogonalitaet/</link>
      <pubDate>Sun, 10 Nov 2019 18:51:29 +0100</pubDate>
      
      <guid>https://yzheng.me/blogs/orthogonalitaet/</guid>
      <description>在线性空间里定义 “正交”
Theorie Definition  Zwei Vektoren $x,y\in V$ heißen orthogonal (oder senkrecht), falls $$ \langle x,y\rangle = 0 $$ gilt; in diesem Fall schreiben wir $x \bot y$.
 Zwei Teilmengen $N,M \subset V$ heißen orthogonal, falls $x\bot y$ für alle $x\in N$ und alle $y\in M$; man schreibt dann $N\bot M$.Besteht $N$ nur aus einem Element $x$, so schreiben wir auch $x\bot M$ anstelle von $\{x\}\bot M$.</description>
    </item>
    
    <item>
      <title>Normen</title>
      <link>https://yzheng.me/blogs/normen/</link>
      <pubDate>Fri, 08 Nov 2019 23:24:22 +0100</pubDate>
      
      <guid>https://yzheng.me/blogs/normen/</guid>
      <description>在线性空间里表示一个vektor 的范数，长度以及两个vektor 之间的角度。
Theorie Definition Norm Sei $V$ ein reeller oder komplexer Vektorraum. Eine Norm auf $V$ ist eine Funktion $| |: V \to \Bbb{R},\ \ a \mapsto \parallel a\parallel$ mit folgenden Eigenschaften: $\forall \lambda \in \Bbb{R}$(oder $\Bbb{C}$) und: Skalarprodukte (Forts.) alle $a,b \in C$ gilt: $$ \begin{align} \parallel\lambda a \parallel = |\lambda|\parallel a \parallel \ \ &amp;amp; \text{(Homogenität)} \newline \parallel a +b\parallel \le \parallel a \parallel + \parallel b \parallel \ \ &amp;amp; \text{(Dreiecks-Ungleichung)} \newline \parallel a \parallel \ge 0 \ \ \ und\ \ \ \parallel a \parallel =0 \ \Leftrightarrow \ a = 0\ \ &amp;amp; \text{(Definitheit)} \end{align} $$ Ein Paar $(V,\parallel\parallel)$ bestehend aus einem Vektorraum und einer Norm heißt normierter Vektorraum</description>
    </item>
    
    <item>
      <title>Skalarprodukte und Matrizen</title>
      <link>https://yzheng.me/blogs/skalarprodukte_und_matrizen/</link>
      <pubDate>Fri, 08 Nov 2019 17:27:30 +0100</pubDate>
      
      <guid>https://yzheng.me/blogs/skalarprodukte_und_matrizen/</guid>
      <description>在不同向量空间里的线性映射可以被 Matrix 表示，Skalarprodukte 也可以。
Theorie Definition  Sei $V$ ein $n-$dimensionaler reeller bzw. komplexer Vektorraum und $\langle,\rangle$ ein Skalarprodukt auf $V$. Wir wählen eine geordnete Basis $B={b_1,\ldots,b_n}$ von $V$ und setzen $$g_{kj} := \langle b_k,b_j \rangle \ \ \ \ 1 \le k,j \le n$$ Die $n \times n$-Matrix $G := (g_{kj}) \in \Bbb{R}^{n \times n}$ bzw. $\Bbb{C}^{c \times c}$ heißt Matrix des Skalarproduktes $\langle,\rangle$ bezüglich der Basis $B$. Da $\langle b_j,b_k \rangle = \langle b_k,b_j \rangle$ bzw.</description>
    </item>
    
    <item>
      <title>Skalarprodukte</title>
      <link>https://yzheng.me/blogs/skalarprodukte/</link>
      <pubDate>Fri, 08 Nov 2019 16:06:25 +0100</pubDate>
      
      <guid>https://yzheng.me/blogs/skalarprodukte/</guid>
      <description>这章节的目的，是在实数和复数的向量空间里定义一些几何的概念譬如：长度，角度，垂直。 这里我们需要一种全新的结构，叫做 &amp;ldquo;Skalarprodukt&amp;rdquo;.
Theorie 在这里我们将在实数和复数空间里理解这种 Skalarprodukt 的结构， Skalarprodukt 在实数和复数空间里的处理方式是不同的。
Euklidischer Vektorraum  Es sei $V$ ein reeller Vektorraum. Eine Bilinearform auf $V$ ist eine Abbildung $$F:V \times V \to \Bbb{R}\ \ \ \ \ \ (a,b)\mapsto F(a,b)$$ die in jedem Argument linear ist; d.h. $\forall a,a_1,a_2,b,b_1,b_2 \in V \text{ und }\forall\lambda_1,\lambda_2,\mu_1,\mu_2\in \Bbb{R}$ gilt: $$ \begin{aligned} F(\lambda_1a_1+\lambda_2a_2,b)= \lambda_1F(a_1,b)+\lambda_2F(a_2,b) \newline F(a,\mu_1b_1+\mu_2b_2)=\mu_1F(a,b_1)+\mu_2F(a,b_2) \newline \end{aligned} $$ Die Menge aller Bilinearformen auf $V$ bezeichnen wir mit $Bil(V)$.</description>
    </item>
    
    <item>
      <title>Jordan Normalform</title>
      <link>https://yzheng.me/blogs/jornansche_normalform/</link>
      <pubDate>Sun, 03 Nov 2019 20:21:59 +0100</pubDate>
      
      <guid>https://yzheng.me/blogs/jornansche_normalform/</guid>
      <description>把矩阵转化成对角矩阵非常方便我们进行大次方的矩阵运算，但并非所有的矩阵都能对角化。这里我们把不能对角化的矩阵转化为若尔当标准型。
In order to calculate Matrix with high power, it would be ideal to have them in diagonalization. But matrix, which doesn&amp;rsquo;t have their geometrische Vielfachheit equals to its algebraische Vielfachheit, can be only transfered to Jordan Normalform.
Theorie Definition  Für einen Eigenwert $\lambda$ von $\Phi$ und $j\in \Bbb{N}_0$ ist der $j-te$ Kern $K_j(\lambda)$ definiert durch $$K_j(\lambda):= ker((\Phi-\lambda id_V)^j)$$
 $v \in V\setminus{0}$ heißt Hauptvektor (oder verallgemeinerter Eigenwektor) von $\Phi$ zum Eigenwert $\lambda$, falls $j \in \Bbb{N}$ existiert mit $(\Phi - \lambda id_V)^j(v)$</description>
    </item>
    
    <item>
      <title>About</title>
      <link>https://yzheng.me/about/</link>
      <pubDate>Mon, 14 Oct 2019 00:28:49 +0200</pubDate>
      
      <guid>https://yzheng.me/about/</guid>
      <description>this is about about.</description>
    </item>
    
    <item>
      <title>LA Sätze Interpretation</title>
      <link>https://yzheng.me/blogs/la_satz/</link>
      <pubDate>Fri, 20 Sep 2019 22:41:21 +0200</pubDate>
      
      <guid>https://yzheng.me/blogs/la_satz/</guid>
      <description>III.Vektorräume 7 Basis und Dimension von Vektorräumen Eine Teilmenge B eines Vektorraumes V heißt Basis von V , wenn sie erzeugend und linear unabhängig ist.
解读： 所谓一个线性空间的basis，就是一组vektor。这组vektor 满足erzeugend 和linear unabhängigkeit 的关系。
7.3 Basisdarstellung und Basiswechsel Sei V ein n-dimensionaler -Vektorraum und B = {b1,..,bn} eine Basis von V. Nach der Deﬁnition einer Basis als linear unabhängiges Erzeugendensystem hat jeder Vektor v ∈ V eine Basisdarstellung
 v = sum(vi*bi,i=1→n)  言辞： Basisdarstellung 就是用basis 来表示一个vektor。vi 是 bi 的Koeffizienten, 即需要多少个bi。</description>
    </item>
    
    <item>
      <title>HM Sätze Interpretation</title>
      <link>https://yzheng.me/blogs/hm_satz/</link>
      <pubDate>Thu, 29 Aug 2019 22:41:21 +0200</pubDate>
      
      <guid>https://yzheng.me/blogs/hm_satz/</guid>
      <description>Eindimensionale Analysis 1. Zahlen Axiome der reellen Zahlen  Sei M ⊂ R, M ≠ ∅: M heißt nach oben beschränkt: ⇔ ∃γ∈R, ∀x∈M, x≤γ. In diesem Fall heißt γ obere Schranke(untere Schranke analog) von M. Ist γ eine obere Schranke von M und gilt für jede weitere obere Schranke ñ von M : γ ≤ ñ, (d.h. γ ist kleinste obere Schranke von M), so heißt γ das Supremum(Inﬁmum analog) von M.</description>
    </item>
    
    <item>
      <title>Komplexitätstheorie</title>
      <link>https://yzheng.me/blogs/komplexita%CC%88tstheorie/</link>
      <pubDate>Sun, 11 Aug 2019 22:41:21 +0200</pubDate>
      
      <guid>https://yzheng.me/blogs/komplexita%CC%88tstheorie/</guid>
      <description>Deﬁnition: Problem Ein Problem Π ist gegeben durch: + eine allgemeine Beschreibung aller vorkommenden Parameter + eine genaue Beschreibung der Eigenschaften, die die Lösung haben soll Ein Problembeispiel /(Instanz) von Π erhalten wir, indem wir die Parameter von Π festlegen.
Deﬁnition: Kodierungsschema  Ein Kodierungsschema s ordnet jedem Problembeispiel eines Problems eine Zeichenkette oder Kodierung über einem Alphabet Σ zu. Die Inputlänge eines Problembeispiels ist die Anzahl des Symbole seiner Kodierung.</description>
    </item>
    
    <item>
      <title>Turing-Maschinen</title>
      <link>https://yzheng.me/blogs/turing_maschinen/</link>
      <pubDate>Sun, 11 Aug 2019 22:41:21 +0200</pubDate>
      
      <guid>https://yzheng.me/blogs/turing_maschinen/</guid>
      <description>Die Registermaschine (RAM) Die RAM besteht aus: + Ein Programm besteht aus einer Folge von Befehlen. + Programmzeilen sind durchnummeriert. + Der Befehlszähler b startet bei 1 und enthält jeweils die Nummer des nächsten auszuführenden Befehls.  In den ersten Registern steht zu Beginn der Berechnung die Eingabe. In den übrigen Registern steht 0. Am Ende der Berechnung stehen die Ausgabedaten in vorher festgelegten Registern. Den Inhalt des Registers i bezeichnen wir mit c(i).</description>
    </item>
    
    <item>
      <title>Informationstheorie</title>
      <link>https://yzheng.me/blogs/informationstheorie/</link>
      <pubDate>Tue, 06 Aug 2019 22:41:21 +0200</pubDate>
      
      <guid>https://yzheng.me/blogs/informationstheorie/</guid>
      <description>Deﬁnition von Information(信息量) Information I: des Auftretens eines Zeichens k + Information soll nie negativ sein: I ≥ 0 + Ein sicheres Ereignis soll keine Information liefern: Pr[(Pi = 1)] ⇒ I = 0 + Information soll stetig sein + Die Information einer Zeichenkette soll gleich der Summe der Einzelinformationen sein: I(pi·pj) = I(pi) + I(pj)
Sei p eine Wahrscheinlichkeit, die Information von p zur Basis b ist deﬁniert als:</description>
    </item>
    
    <item>
      <title>Grundbegriffe der Informatik</title>
      <link>https://yzheng.me/blogs/grundbegriffederinformatik/</link>
      <pubDate>Mon, 05 Aug 2019 22:41:21 +0200</pubDate>
      
      <guid>https://yzheng.me/blogs/grundbegriffederinformatik/</guid>
      <description>Wörter  Ein endliches Alphabet Σ ist eine endliche Menge von Symbolen. Eine endliche Folge von Symbolen aus Σ heißt Wort (über Σ). In der Regel ist die Variable für ein Wort w. Die Menge aller Wörter über Σ heißt Σ∗ . Das heißt w ∈ Σ∗. Die Länge von w ist │w│. Das leere Wort ε mit │ε│ = 0 ist ∈ Σ∗ (∀Σ) Der Operator · bezeichne die Konkatenation, also Hintereinanderreihung, von Wörtern w1 &amp;hellip; wn.</description>
    </item>
    
    <item>
      <title>NP-completeness</title>
      <link>https://yzheng.me/blogs/npcompleteness/</link>
      <pubDate>Mon, 05 Aug 2019 22:41:21 +0200</pubDate>
      
      <guid>https://yzheng.me/blogs/npcompleteness/</guid>
      <description>Deﬁnition Eine polynomiale Transformation einer Sprache L1 ⊆ Σ1∗ in eine Sprache L2 ⊆ Σ2∗ ist eine Funktion f : Σ1∗ → Σ2∗ mit den folgenden Eigenschaften: 1. Es existiert eine polynomiale deterministische Turing-Maschine, die f berechnet. 2. Für alle x ∈ Σ1^∗ gilt: x ∈ L1 ⇔ f(x) ∈ L2.
Wir schreiben dann L1 ∝ L2 (L1 ist polynomial transformierbar in L2 ). Intuitiv bedeutet L1 ∝ L2 , dass L2 gleich schwierig oder schwieriger als L 1 ist.</description>
    </item>
    
    <item>
      <title>Access Control</title>
      <link>https://yzheng.me/blogs/accesscontrol/</link>
      <pubDate>Tue, 30 Jul 2019 22:41:21 +0200</pubDate>
      
      <guid>https://yzheng.me/blogs/accesscontrol/</guid>
      <description>Bell LaPadula A state machine model used for enforcing access control in government and military applications.
Definition  eine Menge S von Subjekten eine Menge O von Objekten eine Menge A = {read, write, append, excute} von Zugriﬀsoperation eine halbgeordnete Menge L von Sicherheitsleveln, auf der ein eindeutiges Maximum deﬁniert ist B ⊆ S × O × A die Menge aller aktuellen Zugriﬀe ist M = m(i,j)(i=..,j=&amp;hellip;),die Zugriﬀskontrollmatrix ist, deren Eintrag m(i,j) ⊆ A die erlaubten Zugriﬀe des Subjektes i auf das Objekt j beschreibt F = (f s , f c , f o ) ein Funktionstripel:  f s : S → L weist jedem Subjekt ein maximales Sicherheitslevel zu f c : S → L weist jedem Subjekt sein aktuelles Sicherheitslevel zu f o : O → L weist jedem Objekt ein Sicherheitslevel zu   Discretionary-Security/ds-Eigenschaft  user&amp;rsquo;s action is what it has predefined  ∀(s, o, a) ∈ B : a ∈ m(s,o)</description>
    </item>
    
    <item>
      <title>Encryption Methods for Kids</title>
      <link>https://yzheng.me/blogs/kidscipher/</link>
      <pubDate>Mon, 29 Jul 2019 22:41:21 +0200</pubDate>
      
      <guid>https://yzheng.me/blogs/kidscipher/</guid>
      <description>Cäser Cipher Enc(K, M) = (Mi + K mod 26)
Bijective Projection * Plain: ABCDEFGHIJKLMNOPQRSTUVWXYZ * Cipher: XYZABCDEFGHIJKLMNOPQRSTUVW
Example: + Plaintext: THE QUICK BROWN FOX JUMPS OVER THE LAZY DOG + Ciphertext: QEB NRFZH YOLTK CLU GRJMP LSBO QEB IXWV ALD
Problem: + no Schlüsselraum, (K ∈ {0, &amp;hellip; , 25}) + means: if M make sense, just try around then you find K
Hacking tips: + Get the most frequent letter out, guessing it&amp;rsquo;s &amp;lsquo;E&amp;rsquo; (if English).</description>
    </item>
    
    <item>
      <title>Security Games</title>
      <link>https://yzheng.me/blogs/securitygames/</link>
      <pubDate>Fri, 26 Jul 2019 22:41:21 +0200</pubDate>
      
      <guid>https://yzheng.me/blogs/securitygames/</guid>
      <description>IND-CPA (Indistinguishability under Chosen Plaintext Attack) 言辞：攻击者生成两条等长的消息{a,b}，挑战者随机决定加密其中的一条消息，攻击者试图猜测被加密的是哪条消息。
Schema IND-CPA-sicher ⇔ kein eﬃzienter Angreifer A kann Chiﬀrate von selbstgewählten Klartexten unterscheiden 1. A erhält im Folgenden Zugriﬀ auf Enc(K, ·)-Orakel 2. A wählt zwei Nachrichten M (1) , M (2) gleicher Länge 3. A erhält C∗ := Enc(K, M (b) ) für gleichverteiltes b ∈ {1, 2} 4. A gewinnt, wenn er b richtig rät EUF-CMA (Existential Unforgeability under Chosen Message Attack): 言辞：攻击者有pk 和 Sig(sk,M) Oracle 的权限，攻击者生成伪造的信息和签名；攻击者获胜，如果伪造的签名解锁后等于被伪造的信息。</description>
    </item>
    
    <item>
      <title>Merkle–Damgård construction</title>
      <link>https://yzheng.me/blogs/damgardconstruction/</link>
      <pubDate>Thu, 25 Jul 2019 22:41:21 +0200</pubDate>
      
      <guid>https://yzheng.me/blogs/damgardconstruction/</guid>
      <description> Merkle–Damgård construction is a method to build collision-resistant cryptographic hash functions from collision-resistant one-way compression functions.
Process  M* = M1 + M2 + M3 + &amp;hellip; + Mn Hi := f(Hi-1 + Mi); 1&amp;lt;i&amp;lt;n   MD-compliant padding  M is a prefix of Pad(M) length(M) = length(M&amp;rsquo;) =&amp;gt; len(Pad(M))=len(Pad(M&amp;rsquo;)) len(M) != len(M&amp;rsquo;) =&amp;gt; the last block of Pad(M) != last block of Pad(M&amp;rsquo;)  </description>
    </item>
    
    <item>
      <title>Block Cipher</title>
      <link>https://yzheng.me/blogs/blockcipher/</link>
      <pubDate>Wed, 24 Jul 2019 22:41:21 +0200</pubDate>
      
      <guid>https://yzheng.me/blogs/blockcipher/</guid>
      <description>Electronic Codebook Mode (ECB-Modus)  Teile M in l Bit Blöcke M1, M2 &amp;hellip; Mn ∈ {0, 1}^l auf Setze C := (C1 , &amp;hellip; ) mit Ci := E(K, Mi) ∈ {0, 1}^l Entschlüsselung funktioniert genauso, nur mit D  Cipher Block Chaining Mode (CBC) + M: Message; C: Ciphertext; IP: Initial Vector; E: Encryption Algorithm; K: key
1. Encryption: + M = M1 + M2 + &amp;hellip; + Mn + C0 = IV + C1 = E(K, M1 Xor C0) + C2 = E(K, M2 Xor C1) + C = C1 + C2 + &amp;hellip; + Cn</description>
    </item>
    
    <item>
      <title>365 Administration powershell</title>
      <link>https://yzheng.me/projects/365modi/</link>
      <pubDate>Sat, 20 Jul 2019 22:41:21 +0200</pubDate>
      
      <guid>https://yzheng.me/projects/365modi/</guid>
      <description>#╭──────────────────────────────╮ #│ ◎ ○ ○ ░░░░ 365 E-mails ░░░░░░│ #├──────────────────────────────┤ #│ │ #│ │ #│ this is for automation of │ #│ configure E-mails in 365. │ #│ │ #│ │ #└──────────────────────────────┘ $MSOCred = Get-Credential $global:Users = @() #users with their original E-mail address $global:old_Users = @() #users with their UserPrincipalName changed to old_xxxx@xxx $global:confirmation = $false # path to the excel file $excelPath = &amp;quot;C:\Script\Faculty.xlsx&amp;quot; # connect to MsolService function logInMsolService { # connect to MsolService Write-Host &amp;quot;`nConnecting to MsolService.</description>
    </item>
    
    <item>
      <title>Asymmetrische Authentifikation</title>
      <link>https://yzheng.me/blogs/asymmetirscheauthentifikation/</link>
      <pubDate>Sat, 20 Jul 2019 22:41:21 +0200</pubDate>
      
      <guid>https://yzheng.me/blogs/asymmetirscheauthentifikation/</guid>
      <description>Digitale Sinaturschemata  (pk,sk) &amp;lt;- Gen(1^k) wie bei Public-Key-Verschlüsselung. Signieren: σ &amp;lt;- Sig(sk,M) Verifizieren: Ver(pk,M,σ) = {0,1}  EUF-CMA (Existential Unforgeability under Chosen Message Attack): Schema IND-CPA-sicher ⇔ kein PPT-Angreifer A wins. 1. A has pk and access to Sig(sk,)-Orakel 2. A gives (M,σ) 3. A wins, when Ver(pk,M,σ) = 1 and M != M. RSA als Signaturschema sig(sk,M) = M^d mod N
Ver(pk,M,σ)=1 :&amp;lt;=&amp;gt; M=σ^e mod N
Problem bei RSA:  Unsinnige Nachrichten können signiert werden.</description>
    </item>
    
    <item>
      <title>Asymmetrische Encryption</title>
      <link>https://yzheng.me/blogs/asymmetrischeencryption/</link>
      <pubDate>Tue, 16 Jul 2019 22:41:21 +0200</pubDate>
      
      <guid>https://yzheng.me/blogs/asymmetrischeencryption/</guid>
      <description>RSA Process RSA Key generation  choose P != Q, both prime N = P x Q, λ(N) = (P-1)(Q-1) pick e from (3,&amp;hellip;,λ(N)-1), ggt(e,λ(N)) = 1 calculate d ≡ e^(−1) (mod λ(N)). //d⋅e ≡ 1 (mod λ(n)) pk = (N,e); sk = (N,d)  Encryption c(m) ≡ m^(e) mod N
Decryption m&amp;copy; ≡ c^(d) mod N
Tricks zum Rechnen:  51^2 mod 59 = (59-8)^2 mod 59 = (-8)^2 mod 59 3^60 mod 59 = 3^(60 mod 58) mod 59 = 3^2 mod 59.</description>
    </item>
    
    <item>
      <title>Burn windows USB in MacOS</title>
      <link>https://yzheng.me/dejavu/macosburnwindows/</link>
      <pubDate>Sat, 13 Jul 2019 22:41:21 +0200</pubDate>
      
      <guid>https://yzheng.me/dejavu/macosburnwindows/</guid>
      <description>diskutil list
sudo diskutil eraseDisk FAT32 &amp;lsquo;name&amp;rsquo; MBRFormat &amp;lsquo;place(/dev/disk2)&amp;rsquo;
unetbootin
//FAT32 对文件大小有限制，如果 .ios 文件超过4GB，安装时可能出现错误。</description>
    </item>
    
    <item>
      <title>Github Page layout changes</title>
      <link>https://yzheng.me/dejavu/githubpagechanges/</link>
      <pubDate>Tue, 02 Jul 2019 22:41:21 +0200</pubDate>
      
      <guid>https://yzheng.me/dejavu/githubpagechanges/</guid>
      <description>Strucktur of this framework _posts: * the folder of all posts
_layouts: * the layouts of different page form
css: * css
DR &amp;amp; DV &amp;amp; index.md &amp;amp; 404.html: * setting of this page
js: * js
images &amp;amp; resources: * resources
_config.yml &amp;amp; CNAME: * meta information confituration
Change the name of the List  edit /_layouts/post.html, whichs has sidebar configuration when in post edit /index.md and index.md in different post folder (DR, DV), whichs shows what people can see when they are in different page //3 things edit /css/ default.</description>
    </item>
    
    <item>
      <title>Precomputed hash chains and Rainbow table</title>
      <link>https://yzheng.me/blogs/precomputedhashchainsandrainbowtable/</link>
      <pubDate>Tue, 02 Jul 2019 22:41:21 +0200</pubDate>
      
      <guid>https://yzheng.me/blogs/precomputedhashchainsandrainbowtable/</guid>
      <description>Reversing Cryptographic Hash Functions  What to do if you have a hashed Message H(msg), and you want to have &amp;lsquo;msg&amp;rsquo;?
 Because the hash function is always one way, the way to get the message from the hashed code is to try a lot with different word, and see if you end up have same hashed code as H(msg).
Precomputed Hash Chains We trade time with space. What do we do is, we compute the H(*) before everything happened.</description>
    </item>
    
    <item>
      <title>Nginx site enable</title>
      <link>https://yzheng.me/dejavu/nginxsiteenable/</link>
      <pubDate>Sun, 30 Jun 2019 22:41:21 +0200</pubDate>
      
      <guid>https://yzheng.me/dejavu/nginxsiteenable/</guid>
      <description> go to /etc/nginx/sites-avaliable/ copy the conf file to ../sites-enabled/ run
foo@bar:~$ sudo systemctl restart nginx   done  </description>
    </item>
    
    <item>
      <title>Rocket Chat Files download [python]</title>
      <link>https://yzheng.me/projects/rocketchatfiles/</link>
      <pubDate>Thu, 20 Jun 2019 22:41:21 +0200</pubDate>
      
      <guid>https://yzheng.me/projects/rocketchatfiles/</guid>
      <description>import json import requests from pathlib import Path &amp;quot;&amp;quot;&amp;quot; ╭──────────────────────────────────────────────╮ │ ◎ ○ ○ ░░░░░░░░░░░░ Usage ░░░░░░░░░░░░░░░░░░│ ├──────────────────────────────────────────────┤ │ │ │ This gist is to download all the files from │ │ the Rocket Chat chat-history. │ │ │ │ Only modify the following when needed: │ │ │ │ │ │ baseUrl; │ │desPath(where you want to download files to); │ │ chatPath(where are the chat files); │ │ X-Auth-Token; │ │ X-User-Id.</description>
    </item>
    
    <item>
      <title>Wordpress 安装及常见错误</title>
      <link>https://yzheng.me/dejavu/wpinstall/</link>
      <pubDate>Sat, 13 Apr 2019 22:41:21 +0200</pubDate>
      
      <guid>https://yzheng.me/dejavu/wpinstall/</guid>
      <description>Wordpress 安装 跟随教程
安装wordpress 后需要fpt 连接或安装不成功 在 wp-config.php 里添加：
define( &#39;FS_METHOD&#39;, &#39;direct&#39; ); sudo chown -R www-data:www-data /var/www  安装wordpress multisite  确定wordpress 文件夹在/var/www/html/ 下 跟随教程 &amp;ldquo;Create a Network&amp;rdquo; 更改 /etc/apache2/apache.conf 文件里的
&amp;lt;Directory /var/www/&amp;gt; Options Indexes FollowSymLinks AllowOverride None Require all granted &amp;lt;/Directory&amp;gt; sudo /etc/init.d/apache2 restart   把AllowOverride 值改为 &amp;lsquo;All&amp;rsquo;
 如果不成功，就删库再来一次。  无法登入(cookie or potential sessions issue) 在 wp-config.php 里添加：
define(&#39;ADMIN\_COOKIE\_PATH&#39;, &#39;/&#39;); define(&#39;COOKIE_DOMAIN&#39;, &#39;&#39;); define(&#39;COOKIEPATH&#39;, &#39;&#39;); define(&#39;SITECOOKIEPATH&#39;, &#39;&#39;);  wordpress 安装child theme $ parent-style = mother theme name</description>
    </item>
    
    <item>
      <title>Frontend-verwendete Technologien</title>
      <link>https://yzheng.me/blogs/frontend_verwendete_technologien/</link>
      <pubDate>Sun, 24 Mar 2019 22:41:21 +0200</pubDate>
      
      <guid>https://yzheng.me/blogs/frontend_verwendete_technologien/</guid>
      <description>In our frontend developing, we have received very much help from the following three Technologies.
Angular Angular ist ein von Google entwickeltes JavaScript-Framework für interaktives Webdesign. Es eignet sich besonders für die Entwicklung Single-Page-Applications (SPA).
(1.1) Angular basiert auf Komponenten, die zusammen Daten austauschen
(1.2) Angular ist mit TypeScript geschrieben. (eine JavaScript Erweiterung ab der Versi-on ES6)
(1.3) Design, Template, Test und Datenverarbeitung sind für jede Komponente in verschiedenen Dateien getrennt.</description>
    </item>
    
  </channel>
</rss>